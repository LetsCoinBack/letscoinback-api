name: Build and Deploy

on:
    push:
      branches: [ master ]

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11 ]
    name: Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@master
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: mvn -f pom.xml clean compile
  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build Maven project
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build and test project
      run: mvn package -Dmaven.test.skip=true -Drun.profiles=prd --file pom.xml
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: ./target/letscoinback-api.jar

  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: build 
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }} 
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      TAG: v1
    steps:
      - uses: actions/checkout@v1
      - name: Download Maven build artifact
        uses: actions/download-artifact@v1
        with:
          name: artifact
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Login to Docker Hub
        run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - name: Build Docker image
        run: |
          mkdir -p letscoinback-api/target
          mv artifact/letscoinback-api.jar letscoinback-api/target
          docker build -f Dockerfile -t $REPO:$TAG letscoinback-api
      - name: Publish Docker image
        run: docker push $REPO:$TAG
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Update image Task Definition
        run: |
          OLD_TASK_ID=$(aws ecs list-tasks --cluster letscoinback --service-name letscoinback-api | egrep "task/" | sed -E "s/.*task\/(.*)\"/\1/")
          aws ecs stop-task --cluster letscoinback --task $OLD_TASK_ID
